name: 恢复备份

on:
  workflow_dispatch:
    inputs:
      backup_url:
        description: '备份文件 URL'
        required: true
      confirm_restore:
        description: '确认恢复（输入 YES 确认）'
        required: true
      create_backup:
        description: '恢复前创建当前数据备份'
        type: boolean
        default: true

jobs:
  restore:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm_restore == 'YES' }}
    
    steps:
      - name: 创建当前数据备份
        if: ${{ github.event.inputs.create_backup == 'true' }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # 添加 PostgreSQL 官方源
          sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          
          # 更新包列表并安装 PostgreSQL 17 客户端
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17
          
          # 解析数据库连接信息
          DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^/]*\).*/\1/p')
          DB_USER=$(echo $DATABASE_URL | sed -n 's/.*:\/\/\([^:]*\).*/\1/p')
          DB_NAME=$(echo $DATABASE_URL | sed -n 's/.*\/\([^?]*\).*/\1/p')
          DB_PASSWORD=$(echo $DATABASE_URL | sed -n 's/.*:\/\/[^:]*:\([^@]*\).*/\1/p')
          
          echo "创建当前数据备份..."
          
          # 备份当前数据
          PGPASSWORD="${DB_PASSWORD}" pg_dump \
            -h "${DB_HOST}" \
            -U "${DB_USER}" \
            -d "${DB_NAME}" \
            --no-owner \
            --no-acl \
            --clean \
            --if-exists \
            > current_backup.sql
          
          # 保存当前备份
          tar -czf current_backup.tar.gz current_backup.sql

      - name: 上传当前数据备份
        if: ${{ github.event.inputs.create_backup == 'true' }}
        uses: actions/upload-artifact@v4  # 升级到 v4
        with:
          name: pre_restore_backup
          path: current_backup.tar.gz
          retention-days: 30

      - name: 下载要恢复的备份
        run: |
          wget ${{ github.event.inputs.backup_url }} -O backup.tar.gz
          tar -xzf backup.tar.gz

      - name: 恢复数据库
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # 添加 PostgreSQL 官方源（如果还没安装）
          if ! command -v psql &> /dev/null; then
            sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install -y postgresql-client-17
          fi
          
          # 解析数据库连接信息
          DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^/]*\).*/\1/p')
          DB_USER=$(echo $DATABASE_URL | sed -n 's/.*:\/\/\([^:]*\).*/\1/p')
          DB_NAME=$(echo $DATABASE_URL | sed -n 's/.*\/\([^?]*\).*/\1/p')
          DB_PASSWORD=$(echo $DATABASE_URL | sed -n 's/.*:\/\/[^:]*:\([^@]*\).*/\1/p')
          
          echo "开始恢复数据库..."
          echo "Host: $DB_HOST"
          echo "User: $DB_USER"
          echo "Database: $DB_NAME"
          
          # 恢复数据
          PGPASSWORD="${DB_PASSWORD}" psql \
            -h "${DB_HOST}" \
            -U "${DB_USER}" \
            -d "${DB_NAME}" \
            -f */database.sql

      - name: 验证恢复
        run: |
          echo "数据恢复完成，请验证以下内容："
          echo "1. 数据库连接是否正常"
          echo "2. 数据是否完整"
          echo "3. 应用是否正常运行"
          
          # 如果需要回滚，可以使用 pre_restore_backup 